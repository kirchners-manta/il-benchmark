# Commands to include in the LAMMPS input stack

units real
boundary p p p
atom_style full
bond_style harmonic				    # adjust to FF
angle_style harmonic				# adjust to FF
dihedral_style opls				    # adjust to FF
special_bonds lj/coul 0.0 0.0 0.5
pair_style hybrid/overlay lj/cut/coul/long 12.0 12.0 coul/long/cs 12.0 thole 2.600 12.0
kspace_style pppm 1.0e-5

# new data file with Drude oscillators added
read_data data-p.lmp extra/special/per/atom 6

# read pair interactions involving Drude particles
# Thole damping recommended if more than 1 Drude per molecule
include pair.lmp
include pair-drude.lmp
include pair-sc.lmp

pair_modify mix arithmetic

# convenient atom groups (for shake, thermostats...)
group ATOMS type 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
group CORES type 1 2 3 4 6 9 11 12 13 14 15
group DRUDES type 16 17 18 19 20 21 22 23 24 25 26

# identify each atom type: [C]ore, [D]rude, [N]on-polarizable
fix DRUDE all drude C C C C N C N N C N C C C C C D D D D D D D D D D D 

# General MD settings
timestep 1.0                        # time step in fs
variable T equal 350.0              # temperature in K
variable p equal 1.0                # pressure in atm

# Perform energy minimization first
thermo 1
minimize 1.0e-4 1.0e-6 500 5000
reset_timestep 0

# fix bonds to their equilibrium length using shake algorithm
fix SHAKE all shake 0.0001 20 0 b 5 6 7

# adjust neighbor list and reneighboring frequency and thermo output
neighbor 2.0 bin
neigh_modify every 1 delay 0 check yes 
thermo 100
thermo_style custom step temp press vol density pe ke etotal

# Velocity initialization
velocity all create $T 543678 dist uniform rot yes mom yes # creates random geometries with a uniform distribution of velocities, linear momenta and angular momenta of the created ensemble are zeroed

# First equilibration run NVE
fix integrator all nve/limit 0.1                # NVE integrator with atom movement limit
fix tcontrol all temp/rescale 1 ${T} ${T} 1.0 1.0   # rescale velocities to target temperature
fix fcom all momentum 1000 linear 1 1 1 rescale # rescale linear momentum to zero to avoid drift    

run 100000                                      # run for 100 ps

unfix fcom
unfix tcontrol
unfix integrator

thermo 1000


# NPT run to determine density
fix integrator all npt temp ${T} ${T} 100 iso ${p} ${p} 1000
fix fcom all momentum 1000 linear 1 1 1 rescale # rescale linear momentum to zero to avoid drift

run 1000000                                     # run for 1 ns

fix lngvin all langevin ${T} ${T} 100 48279         # Langevin thermostat

run 1000000                                     # run for 1 ns

unfix lngvin
 
run 1000000                                     # run for 1 ns


# Write cumulative average of the volume, pressure to output
variable V equal vol
variable P equal press
fix volavg all ave/time 1 1 1 v_V ave running
fix pressavg all ave/time 1 1 1 v_P ave running
thermo_style custom step temp pe etotal press vol f_pressavg f_volavg

run 2000000                                     # run for 2 ns

unfix integrator
unfix fcom


# Shrink to final density
variable boxedge equal f_volavg^(1.0/3.0)
variable boxvol equal f_volavg
variable rdens equal (mass(all)/6.02214086E-1/${boxvol})
print ">>> Average volume is ${boxvol} Angstrom^3"
print ">>> Resulting box edge z length is ${boxedge} Angstrom."
print ">>> Resulting box density is ${rdens} g/cm^3."
thermo_style custom step temp pe etotal press vol
fix defo all deform 1 x final 0.0 ${boxedge} y final 0.0 ${boxedge} z final 0.0 ${boxedge} units box
fix integrator all nvt temp ${T} ${T} 100
fix fcom all momentum 1000 linear 1 1 1 rescale
unfix volavg
unfix pressavg

run 50000                                       # run for 0.5 ns

unfix defo
unfix integrator
unfix fcom


# Last Equilibration
fix integrator all nvt temp ${T} ${T} 100

run 2000000                                     # run for 2 ns

unfix integrator

reset_timestep 0


# Write restart data files
write_data aftereq_restart.lmp
restart 1000000 restart.prod.*


# Production run 1 -> long run with low dump frequency for static properties
dump prod1 all custom 1000 prod_long.lmp id element xu yu zu
dump_modify prod1 sort id

# Run in NVT ensemble
fix integrator all nvt temp ${T} ${T} 100
print "  >>> Starting long NVT production! <<<  "
run 30000000                                    # run for 30 ns
print "  >>> Finished long NVT production! <<<  "
unfix integrator

undump prod1

write_data after_prod1_restart.lmp


# Production run 2 -> short run with high dump frequency for dynamic properties
dump prod2 all custom 1 prod_short.lmp id element xu yu zu
dump_modify prod2 sort id

# Run in NVT ensemble
fix integrator all nvt temp ${T} ${T} 100
print "  >>> Starting short NVT production! <<<  "
run 200000                                      # run for 200 ps
print "  >>> Finished short NVT production! <<<  "
unfix integrator

undump prod2

write_data after_prod2_restart.lmp


